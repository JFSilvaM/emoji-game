{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["const emojis = shuffleEmojis();\r\nlet cardsLeft = emojis.length;\r\nlet storedCards = [];\r\nlet attempts = 0;\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  createGame();\r\n});\r\n\r\nfunction updateAttempts() {\r\n  document.querySelector(\".subtitle\").innerHTML = `Intentos: ${attempts}`;\r\n}\r\n\r\nfunction handleCardClick() {\r\n  // only select one card at a time\r\n  if (storedCards.length > 1) return;\r\n\r\n  storedCards.push(this);\r\n\r\n  this.classList.add(\"flipped\");\r\n\r\n  this.removeEventListener(\"click\", handleCardClick);\r\n\r\n  this.children[1].textContent = emojis[this.children[1].dataset.emoji];\r\n\r\n  // return if the user hasn't selected two cards\r\n  if (storedCards.length !== 2) return;\r\n\r\n  attempts++;\r\n  updateAttempts();\r\n\r\n  checkCards();\r\n}\r\n\r\nfunction checkCards() {\r\n  const firstCard = storedCards[0];\r\n  const secondCard = storedCards[1];\r\n\r\n  if (\r\n    emojis[firstCard.children[1].dataset.emoji] !==\r\n    emojis[secondCard.children[1].dataset.emoji]\r\n  ) {\r\n    setTimeout(() => {\r\n      document.querySelector(\"#wrong\").play();\r\n    }, 500);\r\n\r\n    setTimeout(() => {\r\n      firstCard.addEventListener(\"click\", handleCardClick);\r\n      secondCard.addEventListener(\"click\", handleCardClick);\r\n\r\n      firstCard.classList.remove(\"flipped\");\r\n      secondCard.classList.remove(\"flipped\");\r\n\r\n      storedCards = [];\r\n    }, 1000);\r\n    return;\r\n  }\r\n\r\n  storedCards = [];\r\n  cardsLeft -= 2;\r\n\r\n  if (cardsLeft) {\r\n    setTimeout(() => {\r\n      document.querySelector(\"#correct\").pause();\r\n      document.querySelector(\"#correct\").currentTime = 0;\r\n      document.querySelector(\"#correct\").play();\r\n    }, 500);\r\n\r\n    return;\r\n  }\r\n\r\n  setTimeout(() => {\r\n    createModal();\r\n  }, 500);\r\n}\r\n\r\nfunction createModal() {\r\n  const template = document.querySelector(\".modal\").content;\r\n  const modal = template.cloneNode(true);\r\n\r\n  document.querySelector(\"#applause\").play();\r\n\r\n  document.querySelector(\"main\").appendChild(modal);\r\n\r\n  tsParticles.load(\"tsparticles\", {\r\n    fpsLimit: 120,\r\n    fullScreen: {\r\n      enable: false,\r\n    },\r\n    detectRetina: true,\r\n    reduceDuplicates: false,\r\n    particles: {\r\n      collisions: {\r\n        bounce: {\r\n          horizontal: {\r\n            random: { enable: false, minimumValue: 0.1 },\r\n            value: 1,\r\n          },\r\n          vertical: { random: { enable: false, minimumValue: 0.1 }, value: 1 },\r\n        },\r\n        enable: false,\r\n        mode: \"bounce\",\r\n        overlap: { enable: true, retries: 0 },\r\n      },\r\n      move: {\r\n        angle: { offset: 0, value: 90 },\r\n        attract: { distance: 200, enable: false, rotate: { x: 600, y: 1200 } },\r\n        center: { x: 50, y: 50, radius: 0 },\r\n        decay: 0,\r\n        distance: {},\r\n        direction: \"bottom\",\r\n        drift: 0,\r\n        enable: true,\r\n        outModes: {\r\n          default: \"out\",\r\n          bottom: \"out\",\r\n          left: \"out\",\r\n          right: \"out\",\r\n          top: \"out\",\r\n        },\r\n        random: false,\r\n        size: false,\r\n        speed: 2,\r\n        straight: false,\r\n        vibrate: false,\r\n        warp: false,\r\n      },\r\n      number: {\r\n        density: { enable: true, area: 800, factor: 1000 },\r\n        limit: 0,\r\n        value: 75,\r\n      },\r\n      orbit: {\r\n        animation: { count: 0, enable: false, speed: 1, sync: false },\r\n        enable: false,\r\n        opacity: 1,\r\n        rotation: { random: { enable: false, minimumValue: 0 }, value: 45 },\r\n        width: 1,\r\n      },\r\n      rotate: {\r\n        animation: {\r\n          enable: true,\r\n          speed: 5,\r\n          sync: false,\r\n        },\r\n      },\r\n      shape: {\r\n        character: [\r\n          {\r\n            fill: true,\r\n            font: \"Verdana\",\r\n            value: emojis,\r\n            style: \"\",\r\n            weight: 400,\r\n          },\r\n        ],\r\n        polygon: { nb_sides: 5 },\r\n        stroke: { color: \"random\", width: 1 },\r\n        type: \"char\",\r\n      },\r\n      size: {\r\n        random: { enable: true, minimumValue: 25 },\r\n        value: { min: 25, max: 50 },\r\n        animation: {\r\n          enable: false,\r\n          speed: 25,\r\n          sync: false,\r\n          destroy: \"none\",\r\n          startValue: \"random\",\r\n          minimumValue: 25,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const iconAttempts = document.querySelector(\".icon-attempts\");\r\n  const modalTitle = document.querySelector(\".modal-title\");\r\n\r\n  switch (true) {\r\n    case 8:\r\n      modalTitle.textContent = \"¬°PERFECTO!\";\r\n      iconAttempts.textContent = \"üèÜ\";\r\n      break;\r\n    case attempts <= 12:\r\n      modalTitle.textContent = \"¬°MUY BIEN!\";\r\n      iconAttempts.textContent = \"üëè\";\r\n      break;\r\n    case attempts <= 17:\r\n      modalTitle.textContent = \"¬°BUEN INTENTO!\";\r\n      iconAttempts.textContent = \"ü§î\";\r\n      break;\r\n    default:\r\n      modalTitle.textContent = \"VAYA...\";\r\n      iconAttempts.textContent = \"üí©\";\r\n  }\r\n\r\n  document.querySelector(\".modal-attempts\").textContent = attempts;\r\n\r\n  document.querySelector(\"#play-again\").addEventListener(\"click\", () => {\r\n    location.reload();\r\n  });\r\n}\r\n\r\nfunction createGame() {\r\n  const headingTitle = createElement(\"h1\", \"title\");\r\n  const section = createElement(\"section\", \"content\");\r\n  const articleCards = createElement(\"article\", \"cards\");\r\n  const articleAttempts = createElement(\"aside\", \"attempts\");\r\n  const headingAttempts = createElement(\"h2\", \"subtitle\");\r\n\r\n  headingTitle.textContent = \"Emoji Game\";\r\n  headingAttempts.textContent = `Intentos: ${attempts}`;\r\n\r\n  articleAttempts.appendChild(headingAttempts);\r\n\r\n  for (let i = 0; i < emojis.length; i++) {\r\n    const card = createElement(\"div\", \"card\");\r\n    const front = createElement(\"div\", \"front\");\r\n    const back = createElement(\"div\", \"back\");\r\n\r\n    front.textContent = \"‚ùî\";\r\n    back.dataset.emoji = i;\r\n\r\n    card.append(front, back);\r\n    card.addEventListener(\"click\", handleCardClick);\r\n\r\n    articleCards.appendChild(card);\r\n  }\r\n\r\n  section.append(headingTitle, articleCards, articleAttempts);\r\n  document.querySelector(\"main\").appendChild(section);\r\n}\r\n\r\nfunction createElement(element, className) {\r\n  const elm = document.createElement(element);\r\n\r\n  elm.classList.add(className);\r\n\r\n  return elm;\r\n}\r\n\r\nfunction shuffleEmojis() {\r\n  const emojis = [\"üòã\", \"üòÄ\", \"üí©\", \"üßê\", \"üò°\", \"üôÑ\", \"üëª\", \"üëΩ\"];\r\n  const emojiList = emojis.concat(emojis);\r\n  const shuffledEmojis = [];\r\n\r\n  while (emojiList.length > 0) {\r\n    const randomIndex = Math.floor(Math.random() * emojiList.length);\r\n    shuffledEmojis.push(emojiList[randomIndex]);\r\n    emojiList.splice(randomIndex, 1);\r\n  }\r\n\r\n  return shuffledEmojis;\r\n}\r\n"],"names":["emojis","shuffleEmojis","cardsLeft","length","storedCards","attempts","updateAttempts","document","querySelector","innerHTML","handleCardClick","push","this","classList","add","removeEventListener","children","textContent","dataset","emoji","checkCards","firstCard","secondCard","setTimeout","play","addEventListener","remove","pause","currentTime","createModal","modal","content","cloneNode","appendChild","tsParticles","load","fpsLimit","fullScreen","enable","detectRetina","reduceDuplicates","particles","collisions","bounce","horizontal","random","minimumValue","value","vertical","mode","overlap","retries","move","angle","offset","attract","distance","rotate","x","y","center","radius","decay","direction","drift","outModes","default","bottom","left","right","top","size","speed","straight","vibrate","warp","number","density","area","factor","limit","orbit","animation","count","sync","opacity","rotation","width","shape","character","fill","font","style","weight","polygon","nb_sides","stroke","color","type","min","max","destroy","startValue","iconAttempts","modalTitle","location","reload","createGame","headingTitle","createElement","section","articleCards","articleAttempts","headingAttempts","i","card","front","back","append","element","className","elm","emojis1","emojiList","concat","shuffledEmojis","randomIndex","Math","floor","splice"],"version":3,"file":"index.bd393f59.js.map"}