{"mappings":"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","sources":["src/js/main.js"],"sourcesContent":["const emojis = shuffleEmojis();\nlet cardsLeft = emojis.length;\nlet storedCards = [];\nlet attempts = 0;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  createGame();\n});\n\nfunction updateAttempts() {\n  document.querySelector(\".subtitle\").innerHTML = `Intentos: ${attempts}`;\n}\n\nfunction handleCardClick() {\n  // only select one card at a time\n  if (storedCards.length > 1) return;\n\n  storedCards.push(this);\n\n  this.classList.add(\"flipped\");\n\n  this.removeEventListener(\"click\", handleCardClick);\n\n  this.children[1].textContent = emojis[this.children[1].dataset.emoji];\n\n  // return if the user hasn't selected two cards\n  if (storedCards.length !== 2) return;\n\n  attempts++;\n  updateAttempts();\n\n  checkCards();\n}\n\nfunction checkCards() {\n  const firstCard = storedCards[0];\n  const secondCard = storedCards[1];\n\n  if (\n    emojis[firstCard.children[1].dataset.emoji] !==\n    emojis[secondCard.children[1].dataset.emoji]\n  ) {\n    setTimeout(() => {\n      document.querySelector(\"#wrong\").play();\n\n      firstCard.addEventListener(\"click\", handleCardClick);\n      secondCard.addEventListener(\"click\", handleCardClick);\n\n      firstCard.classList.remove(\"flipped\");\n      secondCard.classList.remove(\"flipped\");\n\n      storedCards = [];\n    }, 1000);\n    return;\n  }\n\n  storedCards = [];\n  cardsLeft -= 2;\n\n  if (cardsLeft) {\n    setTimeout(() => {\n      document.querySelector(\"#correct\").pause();\n      document.querySelector(\"#correct\").currentTime = 0;\n      document.querySelector(\"#correct\").play();\n    }, 500);\n\n    return;\n  }\n\n  setTimeout(() => {\n    createModal();\n  }, 500);\n}\n\nfunction createModal() {\n  const template = document.querySelector(\".modal\").content;\n  const modal = template.cloneNode(true);\n\n  document.querySelector(\"#applause\").play();\n\n  document.querySelector(\"main\").appendChild(modal);\n\n  tsParticles.load(\"tsparticles\", {\n    fpsLimit: 120,\n    fullScreen: {\n      enable: false,\n    },\n    detectRetina: true,\n    reduceDuplicates: false,\n    particles: {\n      collisions: {\n        bounce: {\n          horizontal: {\n            random: { enable: false, minimumValue: 0.1 },\n            value: 1,\n          },\n          vertical: { random: { enable: false, minimumValue: 0.1 }, value: 1 },\n        },\n        enable: false,\n        mode: \"bounce\",\n        overlap: { enable: true, retries: 0 },\n      },\n      move: {\n        angle: { offset: 0, value: 90 },\n        attract: { distance: 200, enable: false, rotate: { x: 600, y: 1200 } },\n        center: { x: 50, y: 50, radius: 0 },\n        decay: 0,\n        distance: {},\n        direction: \"bottom\",\n        drift: 0,\n        enable: true,\n        outModes: {\n          default: \"out\",\n          bottom: \"out\",\n          left: \"out\",\n          right: \"out\",\n          top: \"out\",\n        },\n        random: false,\n        size: false,\n        speed: 2,\n        straight: false,\n        vibrate: false,\n        warp: false,\n      },\n      number: {\n        density: { enable: true, area: 800, factor: 1000 },\n        limit: 0,\n        value: 75,\n      },\n      orbit: {\n        animation: { count: 0, enable: false, speed: 1, sync: false },\n        enable: false,\n        opacity: 1,\n        rotation: { random: { enable: false, minimumValue: 0 }, value: 45 },\n        width: 1,\n      },\n      rotate: {\n        animation: {\n          enable: true,\n          speed: 5,\n          sync: false,\n        },\n      },\n      shape: {\n        character: [\n          {\n            fill: true,\n            font: \"Verdana\",\n            value: emojis,\n            style: \"\",\n            weight: 400,\n          },\n        ],\n        polygon: { nb_sides: 5 },\n        stroke: { color: \"random\", width: 1 },\n        type: \"char\",\n      },\n      size: {\n        random: { enable: true, minimumValue: 25 },\n        value: { min: 25, max: 50 },\n        animation: {\n          enable: false,\n          speed: 25,\n          sync: false,\n          destroy: \"none\",\n          startValue: \"random\",\n          minimumValue: 25,\n        },\n      },\n    },\n  });\n\n  // document.querySelector(\".modal-attempts\").textContent = attempts;\n\n  document.querySelector(\"#play-again\").addEventListener(\"click\", () => {\n    location.reload();\n  });\n}\n\nfunction createGame() {\n  const headingTitle = createElement(\"h1\", \"title\");\n  const section = createElement(\"section\", \"content\");\n  const articleCards = createElement(\"article\", \"cards\");\n  const articleAttempts = createElement(\"aside\", \"attempts\");\n  const headingAttempts = createElement(\"h2\", \"subtitle\");\n\n  headingTitle.textContent = \"Emoji Game\";\n  headingAttempts.textContent = `Intentos: ${attempts}`;\n\n  articleAttempts.appendChild(headingAttempts);\n\n  for (let i = 0; i < emojis.length; i++) {\n    const card = createElement(\"div\", \"card\");\n    const front = createElement(\"div\", \"front\");\n    const back = createElement(\"div\", \"back\");\n\n    front.textContent = \"❔\";\n    back.dataset.emoji = i;\n\n    card.append(front, back);\n    card.addEventListener(\"click\", handleCardClick);\n\n    articleCards.appendChild(card);\n  }\n\n  section.append(headingTitle, articleCards, articleAttempts);\n  document.querySelector(\"main\").appendChild(section);\n}\n\nfunction createElement(element, className) {\n  const elm = document.createElement(element);\n\n  elm.classList.add(className);\n\n  return elm;\n}\n\nfunction shuffleEmojis() {\n  const emojis = [\"😋\", \"😀\", \"💩\", \"🧐\", \"😡\", \"🙄\", \"👻\", \"👽\"];\n  const emojiList = emojis.concat(emojis);\n  const shuffledEmojis = [];\n\n  while (emojiList.length > 0) {\n    const randomIndex = Math.floor(Math.random() * emojiList.length);\n    shuffledEmojis.push(emojiList[randomIndex]);\n    emojiList.splice(randomIndex, 1);\n  }\n\n  return shuffledEmojis;\n}\n"],"names":["emojis","shuffleEmojis","cardsLeft","length","storedCards","attempts","updateAttempts","document","querySelector","innerHTML","handleCardClick","push","this","classList","add","removeEventListener","children","textContent","dataset","emoji","checkCards","firstCard","secondCard","setTimeout","pause","currentTime","play","createModal","addEventListener","remove","modal","content","cloneNode","appendChild","tsParticles","load","fpsLimit","fullScreen","enable","detectRetina","reduceDuplicates","particles","collisions","bounce","horizontal","random","minimumValue","value","vertical","mode","overlap","retries","move","angle","offset","attract","distance","rotate","x","y","center","radius","decay","direction","drift","outModes","default","bottom","left","right","top","size","speed","straight","vibrate","warp","number","density","area","factor","limit","orbit","animation","count","sync","opacity","rotation","width","shape","character","fill","font","style","weight","polygon","nb_sides","stroke","color","type","min","max","destroy","startValue","location","reload","createGame","headingTitle","createElement","section","articleCards","articleAttempts","headingAttempts","i","card","front","back","append","element","className","elm","emojis1","emojiList","concat","shuffledEmojis","randomIndex","Math","floor","splice"],"version":3,"file":"index.21defecf.js.map"}