{"mappings":"AAAA,MAAMA,OAASC,gBACf,IAAIC,UAAYF,OAAOG,OACnBC,YAAc,GACdC,SAAW,EAMf,SAASC,iBACPC,SAASC,cAAc,aAAaC,UAAY,aAAaJ,WAG/D,SAASK,kBAEHN,YAAYD,OAAS,IAEzBC,YAAYO,KAAKC,MAEjBA,KAAKC,UAAUC,IAAI,WAEnBF,KAAKG,oBAAoB,QAASL,iBAElCE,KAAKI,SAAS,GAAGC,YAAcjB,OAAOY,KAAKI,SAAS,GAAGE,QAAQC,OAGpC,IAAvBf,YAAYD,SAEhBE,WACAC,iBAEAc,eAGF,SAASA,aACP,MAAMC,EAAYjB,YAAY,GACxBkB,EAAalB,YAAY,GAG7BJ,OAAOqB,EAAUL,SAAS,GAAGE,QAAQC,SACrCnB,OAAOsB,EAAWN,SAAS,GAAGE,QAAQC,QAgBxCf,YAAc,GACdF,WAAa,EAETA,UACFqB,YAAW,KACThB,SAASC,cAAc,YAAYgB,QACnCjB,SAASC,cAAc,YAAYiB,YAAc,EACjDlB,SAASC,cAAc,YAAYkB,SAClC,KAKLH,YAAW,KACTI,gBACC,MA7BDJ,YAAW,KACThB,SAASC,cAAc,UAAUkB,OAEjCL,EAAUO,iBAAiB,QAASlB,iBACpCY,EAAWM,iBAAiB,QAASlB,iBAErCW,EAAUR,UAAUgB,OAAO,WAC3BP,EAAWT,UAAUgB,OAAO,WAE5BzB,YAAc,KACb,KAsBP,SAASuB,cACP,MACMG,EADWvB,SAASC,cAAc,UAAUuB,QAC3BC,WAAU,GAEjCzB,SAASC,cAAc,aAAakB,OAEpCnB,SAASC,cAAc,QAAQyB,YAAYH,GAG3CvB,SAASC,cAAc,eAAeoB,iBAAiB,SAAS,KAC9DrB,SAASC,cAAc,QAAQC,UAAY,GAC3CF,SAASC,cAAc,aAAagB,QAEpCtB,UAAYF,OAAOG,OACnBE,SAAW,EACX6B,gBAIJ,SAASA,aACP,MAAMC,EAAeC,cAAc,KAAM,SACnCC,EAAUD,cAAc,UAAW,WACnCE,EAAeF,cAAc,UAAW,SACxCG,EAAkBH,cAAc,QAAS,YACzCI,EAAkBJ,cAAc,KAAM,YAE5CD,EAAalB,YAAc,aAC3BuB,EAAgBvB,YAAc,aAAaZ,WAE3CkC,EAAgBN,YAAYO,GAE5B,IAAK,IAAIC,EAAI,EAAGA,EAAIzC,OAAOG,OAAQsC,IAAK,CACtC,MAAMC,EAAON,cAAc,MAAO,QAC5BO,EAAQP,cAAc,MAAO,SAC7BQ,EAAOR,cAAc,MAAO,QAElCO,EAAM1B,YAAc,IAClB2B,EAAG1B,QAAQC,MAAQsB,EAErBC,EAAKG,OAAOF,EAAOC,GACnBF,EAAKd,iBAAiB,QAASlB,iBAE/B4B,EAAaL,YAAYS,GAG3BL,EAAQQ,OAAOV,EAAcG,EAAcC,GAC3ChC,SAASC,cAAc,QAAQyB,YAAYI,GAG7C,SAASD,cAAcU,EAASC,GAC9B,MAAMC,EAAMzC,SAAS6B,cAAcU,GAInC,OAFAE,EAAInC,UAAUC,IAAIiC,GAEXC,EAGT,SAAS/C,gBACP,MAAMgD,EAAS,CAAC,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,KAAQ,MAC7CC,EAAYD,EAAOE,OAAOF,GAC1BG,EAAiB,GAEvB,KAAOF,EAAU/C,OAAS,GAAG,CAC3B,MAAMkD,EAAcC,KAAKC,MAAMD,KAAKE,SAAWN,EAAU/C,QACzDiD,EAAezC,KAAKuC,EAAUG,IAC9BH,EAAUO,OAAOJ,EAAa,GAGhC,OAAOD,EAzI9B7C,SAASqB,iBAAiB,oBAAoB,KAC5CM","sources":["src/js/main.js"],"sourcesContent":["const emojis = shuffleEmojis();\nlet cardsLeft = emojis.length;\nlet storedCards = [];\nlet attempts = 0;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  createGame();\n});\n\nfunction updateAttempts() {\n  document.querySelector(\".subtitle\").innerHTML = `Intentos: ${attempts}`;\n}\n\nfunction handleCardClick() {\n  // only select one card at a time\n  if (storedCards.length > 1) return;\n\n  storedCards.push(this);\n\n  this.classList.add(\"flipped\");\n\n  this.removeEventListener(\"click\", handleCardClick);\n\n  this.children[1].textContent = emojis[this.children[1].dataset.emoji];\n\n  // return if the user hasn't selected two cards\n  if (storedCards.length !== 2) return;\n\n  attempts++;\n  updateAttempts();\n\n  checkCards();\n}\n\nfunction checkCards() {\n  const firstCard = storedCards[0];\n  const secondCard = storedCards[1];\n\n  if (\n    emojis[firstCard.children[1].dataset.emoji] !==\n    emojis[secondCard.children[1].dataset.emoji]\n  ) {\n    setTimeout(() => {\n      document.querySelector(\"#wrong\").play();\n\n      firstCard.addEventListener(\"click\", handleCardClick);\n      secondCard.addEventListener(\"click\", handleCardClick);\n\n      firstCard.classList.remove(\"flipped\");\n      secondCard.classList.remove(\"flipped\");\n\n      storedCards = [];\n    }, 1000);\n    return;\n  }\n\n  storedCards = [];\n  cardsLeft -= 2;\n\n  if (cardsLeft) {\n    setTimeout(() => {\n      document.querySelector(\"#correct\").pause();\n      document.querySelector(\"#correct\").currentTime = 0;\n      document.querySelector(\"#correct\").play();\n    }, 500);\n\n    return;\n  }\n\n  setTimeout(() => {\n    createModal();\n  }, 500);\n}\n\nfunction createModal() {\n  const template = document.querySelector(\".modal\").content;\n  const modal = template.cloneNode(true);\n\n  document.querySelector(\"#applause\").play();\n\n  document.querySelector(\"main\").appendChild(modal);\n  // document.querySelector(\".modal-attempts\").textContent = attempts;\n\n  document.querySelector(\"#play-again\").addEventListener(\"click\", () => {\n    document.querySelector(\"main\").innerHTML = \"\";\n    document.querySelector(\"#applause\").pause();\n\n    cardsLeft = emojis.length;\n    attempts = 0;\n    createGame();\n  });\n}\n\nfunction createGame() {\n  const headingTitle = createElement(\"h1\", \"title\");\n  const section = createElement(\"section\", \"content\");\n  const articleCards = createElement(\"article\", \"cards\");\n  const articleAttempts = createElement(\"aside\", \"attempts\");\n  const headingAttempts = createElement(\"h2\", \"subtitle\");\n\n  headingTitle.textContent = \"Emoji Game\";\n  headingAttempts.textContent = `Intentos: ${attempts}`;\n\n  articleAttempts.appendChild(headingAttempts);\n\n  for (let i = 0; i < emojis.length; i++) {\n    const card = createElement(\"div\", \"card\");\n    const front = createElement(\"div\", \"front\");\n    const back = createElement(\"div\", \"back\");\n\n    front.textContent = \"❔\";\n    back.dataset.emoji = i;\n\n    card.append(front, back);\n    card.addEventListener(\"click\", handleCardClick);\n\n    articleCards.appendChild(card);\n  }\n\n  section.append(headingTitle, articleCards, articleAttempts);\n  document.querySelector(\"main\").appendChild(section);\n}\n\nfunction createElement(element, className) {\n  const elm = document.createElement(element);\n\n  elm.classList.add(className);\n\n  return elm;\n}\n\nfunction shuffleEmojis() {\n  const emojis = [\"😋\", \"😀\", \"💩\", \"🧐\", \"😡\", \"🙄\", \"👻\", \"👽\"];\n  const emojiList = emojis.concat(emojis);\n  const shuffledEmojis = [];\n\n  while (emojiList.length > 0) {\n    const randomIndex = Math.floor(Math.random() * emojiList.length);\n    shuffledEmojis.push(emojiList[randomIndex]);\n    emojiList.splice(randomIndex, 1);\n  }\n\n  return shuffledEmojis;\n}\n"],"names":["emojis","shuffleEmojis","cardsLeft","length","storedCards","attempts","updateAttempts","document","querySelector","innerHTML","handleCardClick","push","this","classList","add","removeEventListener","children","textContent","dataset","emoji","checkCards","firstCard","secondCard","setTimeout","pause","currentTime","play","createModal","addEventListener","remove","modal","content","cloneNode","appendChild","createGame","headingTitle","createElement","section","articleCards","articleAttempts","headingAttempts","i","card","front","back","append","element","className","elm","emojis1","emojiList","concat","shuffledEmojis","randomIndex","Math","floor","random","splice"],"version":3,"file":"index.fcd942fe.js.map"}